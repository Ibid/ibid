#!/usr/bin/env python

import optparse
import re
import subprocess
import sys

def process_block(block):
    "Reformat a block into nice rst"
    block = ''.join(block).decode('utf-8')

    template_re = re.compile(r'^\tAuthor: .*\n'
                             r'\tApproved by: .*\n'
                             r'\tFixes LP: #(.*)$',
                             re.MULTILINE | re.UNICODE)
    def repl(m):
        bugs = [int(bug) for bug in m.group(1).split(',')]
        if bugs:
            bugs = [u':bug:`%i`' % bug for bug in bugs]
            return u'\n\tFixes: %s' % u', '.join(bugs)
        return u''
    block = template_re.sub(repl, block)

    sys.stdout.write(block.encode('utf-8'))

def main():
    parser = optparse.OptionParser()
    parser.add_option('-r', '--revision', metavar='REVSPEC',
                      help='Passed to bzr')
    opts, args = parser.parse_args()

    cmd = ['bzr', 'log', '--gnu', '-n1']
    if opts.revision:
        cmd.append('-r' + opts.revision)
    p = subprocess.Popen(cmd, stdout=subprocess.PIPE)

    head_re = re.compile(r'^\d{4}-\d{2}-\d{2}  .+  <.+>$')
    block = []
    for line in p.stdout:
        if head_re.match(line):
            process_block(block)
            block = []
        block.append(line)

    process_block(block)

    assert p.wait() == 0

if __name__ == '__main__':
    main()
