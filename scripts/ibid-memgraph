#!/usr/bin/env python

import csv
import gzip
import optparse
import os
import os.path
import sys

import numpy as np
import matplotlib.pyplot as plt

parser = optparse.OptionParser(usage="""%prog logfile
logfile is a memory log file (possibly gzipped)""")
parser.add_option('-o', '--output', dest='output', metavar='FILE',
        help='Output to filename rather than interactive')
parser.add_option('-d', '--dpi', dest='dpi',
        help='Output DPI')
parser.add_option('-b', '--botname', dest='botname', default='Ibid', metavar='NAME',
        help='Bot Name (Graph Title)')

(options, args) = parser.parse_args()

if len(args) != 1:
    sys.stderr.write("Log file required\n")
    sys.exit(2)

if args[0].endswith('.gz'):
    f = gzip.open(args[0], 'rb')
else:
    f = file(args[0], 'rb')

reader = csv.reader(f)
data = np.array([row[1:] for row in reader], dtype=float)

fig = plt.figure()
ax_obj = fig.add_subplot(111)
ax_obj.set_xlabel('time (s)')
ax_mem = ax_obj.twinx()
ax_mem.grid(True)

ax_obj.plot(data[:,0], data[:,1]/1000, 'b-', label='Objects (k)')
ax_obj.set_ylabel('Objects (k)', color='b')

for tl in ax_obj.get_yticklabels():
    tl.set_color('b')

ax_mem.plot(data[:,0], data[:,2]/1024, 'r-', label='VM Size')
ax_mem.plot(data[:,0], data[:,3]/1024, 'g-', label='VM RSS')

ax_mem.set_ylabel('Memory (MiB)')

plt.legend(loc='best')
plt.title(options.botname + ' Memory Usage')

if options.output:
    plt.savefig(options.output, dpi=options.dpi)
else:
    plt.show()

# vi: set et sta sw=4 ts=4:
